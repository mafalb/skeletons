# vim: set ft=yaml ts=2 expandtab:
#
# Copyright (c) Markus Falb <markus.falb@mafalb.at>
# GNU General Public License v3.0+
# see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt
---

name: CI

on:  # yamllint disable-line rule:truthy

  push:
    branches:
      - '**'
    tags-ignore:
      - '*'

  schedule:
    - cron: '40 12 * * 6'

  workflow_dispatch:

jobs:

  ci:
    runs-on: ubuntu-22.04
    env:
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1

    steps:

      - name: checkout
        uses: actions/checkout@v4
        with:
          path: skeletons

      - name: Create a directory for ansible collections
        run: mkdir -p ansible_collections

      - name: install shellcheck
        run: sudo apt-get install shellcheck

      - name: install ansible-lint
        run: pip install ansible-lint

      - name: yamllint
        working-directory: skeletons
        run: yamllint -s .

      # https://github.com/ansible/ansible/pull/82624
      - name: No "masked" files do exist in ansible-collection-skeleton
        working-directory: skeletons
        run: |
            while read f
            do
                if test -f "$f".j2;
                then
                    false
                fi
            done < <(find ansible-collection-skeleton -type f)

      - name: Collection | create a new collection with our skeleton
        working-directory: ansible_collections
        run: |
          ansible-galaxy collection init --collection-skeleton ../skeletons/ansible-collection-skeleton local.ci
          ansible-galaxy collection install -r local/ci/requirements.yml

      - name: Collection | lint
        working-directory: ansible_collections/local/ci
        run: |
          yamllint -s .
          ansible-lint -x "galaxy[version-incorrect],galaxy[tags]"

      - name: Collection | sanity
        working-directory: ansible_collections/local/ci
        run: |
          ansible-test sanity

      - name: Collectionrole | create a new role
        working-directory: ansible_collections
        run: |
          ansible-galaxy role init --role-skeleton ../skeletons/ansible-collection-role-skeleton role1 --init-path local/ci/roles
          cat - >local/ci/playbooks/ci.yml << EOF
          ---
          - name: A ci playbook
            hosts: localhost
            roles:
              - role: local.ci.role1
          EOF

      - name: Collection | lint
        working-directory: ansible_collections/local/ci
        env:
          ANSIBLE_COLLECTIONS_PATH: "$GITHUB_WORKSPACE"
        run: |
          test -f "roles/role1/tasks/main.yml"
          pwd
          tree "$GITHUB_WORKSPACE/ansible_collections"
          cat roles/role1/meta/main.yml
          yamllint -s .
          ansible-lint -x "galaxy[version-incorrect],galaxy[tags]"

      - name: Collection | sanity
        working-directory: ansible_collections/local/ci
        run: |
          ansible-test sanity

      - name: Collection | run playbook
        working-directory: ansible_collections/local/ci
        env:
          ANSIBLE_COLLECTIONS_PATH: "$GITHUB_WORKSPACE:$HOME/runner/.ansible/collections"
        run: |
          ansible-playbook playbooks/ci.yml

  SELECTBRANCH:
    uses: mafalb/workflows/.github/workflows/reusable-selectbranch.yml@main
    needs: ci

  dispatch:
    runs-on: ubuntu-22.04
    needs:
      - SELECTBRANCH
      - ci
    env:
      # stay in the environment we are in
      # i.e. if we are running in dev, we want to call others in dev
      TARGETED_BRANCH: ${{ needs.SELECTBRANCH.outputs.ref }}

    permissions:
      actions: write

    steps:

      - name: Assertions
        run: |
          test -n "$TARGETED_BRANCH"
          test -n "${{ secrets.WORKFLOW_DISPATCH }}"

      # https://docs.github.com/en/actions/security-guides/automatic-token-authentication
      # https://docs.github.com/en/rest/actions/workflows?apiVersion=2022-11-28#create-a-workflow-dispatch-event
      - name: Run workflow on mafalb/ansible-test-collections
        env:
          URI: https://api.github.com/repos
          REPO: mafalb/ansible-test-collections
          WORKFLOW: "CI.yml"
        run: |
          set -x
          curl -sSv -L --fail -X POST "$URI/$REPO/actions/workflows/$WORKFLOW/dispatches" \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.WORKFLOW_DISPATCH }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          --data @- << JSON
          {
            "ref": "$TARGETED_BRANCH",
            "inputs": {
              "targeted_branch": "$TARGETED_BRANCH"
            }
          }
          JSON
...
