# vim: set ft=yaml ts=2 expandtab:
#
# Copyright (c) Markus Falb <markus.falb@mafalb.at>
# GNU General Public License v3.0+
# see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt
---

name: Skeletons
on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      targeted_branch:
        type: string
        required: true
jobs:

  selectbranch:
    uses: mafalb/workflows/.github/workflows/reusable-selectbranch.yml@prod
    with:
      targeted_branch: ${{ inputs.targeted_branch }}

  sanity:
    uses: mafalb/workflows/.github/workflows/reusable-sanity.yml@prod
    with:
      targeted_branch: ${{ needs.selectbranch.outputs.ref }}
    needs: selectbranch

  skeletons:
    needs: selectbranch
    runs-on: ubuntu-22.04
    env:
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1
      ANSIBLE_COLLECTIONS_PATH: "$HOME/.ansible/collections"

    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: skeletons

      - name: Create a directory for ansible collections
        run: mkdir -p ansible_collections

      - name: Install shellcheck
        run: sudo apt-get install shellcheck

      - name: Install ansible-lint
        run: pip install ansible-lint

      - name: yamllint
        working-directory: skeletons
        run: yamllint -s .

      # https://github.com/ansible/ansible/pull/82624
      - name: No "masked" files do exist in ansible-collection-skeleton
        working-directory: skeletons
        run: |
            while read f
            do
                if test -f "$f".j2;
                then
                    false
                fi
            # we search the whole directory tree for now,
            # change that when it cause troubles
            #
            done < <(find . -type f)

      - name: Collection | create a new collection with our skeleton
        working-directory: ansible_collections
        run: |
          ansible-galaxy collection init --collection-skeleton ../skeletons/ansible-collection-skeleton local.ci
          ansible-galaxy collection install -r local/ci/requirements.yml

      - name: Collection | lint
        working-directory: ansible_collections/local/ci
        run: |
          yamllint -s .
          ansible-lint -x "galaxy[version-incorrect],galaxy[tags]"

      - name: Collection | sanity
        working-directory: ansible_collections/local/ci
        run: |
          ansible-test sanity

      - name: Collectionrole | create a new role
        working-directory: ansible_collections
        run: |
          ansible-galaxy role init --role-skeleton ../skeletons/ansible-collection-role-skeleton role1 --init-path local/ci/roles
          cat - >local/ci/playbooks/ci.yml << EOF
          ---
          - name: A ci playbook
            hosts: localhost
            roles:
              - role: local.ci.role1
          EOF

      - name: Collection | lint
        working-directory: ansible_collections/local/ci
        run: |
          test -f "roles/role1/tasks/main.yml"
          pwd
          tree "$GITHUB_WORKSPACE/ansible_collections"
          cat roles/role1/meta/main.yml
          yamllint -s .
          ansible-lint -x "galaxy[version-incorrect],galaxy[tags]"

      - name: Collection | sanity
        working-directory: ansible_collections/local/ci
        run: ansible-test sanity

      - name: Collection | run playbook
        working-directory: ansible_collections/local/ci
        env:
          ANSIBLE_COLLECTIONS_PATH: "$GITHUB_WORKSPACE:${{ env.ANSIBLE_COLLECTIONS_PATH }}"
        run: |
          echo "$ANSIBLE_COLLECTIONS_PATH"
          ansible-playbook playbooks/ci.yml

      - name: Collection | Build the collection
        run: ansible-galaxy collection build ansible_collections/local/ci

      - name: Collection | Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ansible-collections-${{ needs.selectbranch.outputs.targeted_branch }}
          path: local-ci-0.1.0.tar.gz
          if-no-files-found: error
          overwrite: true

  ansiblecollection:
    needs: skeletons
    uses: mafalb/workflows/.github/workflows/reusable-ansiblecollection.yml@prod
    with:
      filename: local-ci-0.1.0.tar.gz
      targeted_branch: ${{ needs.selectbranch.outputs.targeted_branch }}

  molecule:
    needs: skeletons
    uses: mafalb/workflows/.github/workflows/reusable-molecule.yml@prod
    with:
      targeted_branch: ${{ needs.selectbranch.outputs.targeted_branch }}
      target: rocky9
      filename: local-ci-0.1.0.tar.gz

  allsuccess:
    if: |
      success() || failure() &&
      ! (github.event.pull_request.head.repo.full_name == github.repository)
    uses: mafalb/workflows/.github/workflows/reusable-allsuccess.yml@prod
    with:
      joblist: ${{ toJSON(needs) }}
    needs:
      - selectbranch
      - sanity
      - skeletons
      - ansiblecollection
      - molecule

...
